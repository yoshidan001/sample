●解答提出用ファイル
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～

氏名：吉田尚弘

～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問1】以下のコードを修正してください。（行は自由に追加してください）

String content = null;
try (Stream<String> stream = Files.lines(Paths.get("hoge.txt"),Charset.forName("Shift_JIS"))) {
	content = stream.collect(Collectors.joining());
}catch(IOException ioe){
	throw new UncheckedIOException(ioe);
}
		
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問2】以下のコードを修正してください。（行は自由に追加してください）

public List<String> combine(Map<String, String> map) {    
	return map.entrySet().stream().map(e->String.join(":", e.getKey(),e.getValue())).collect(Collectors.toList());
}

～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問3】正しい解答（AorB)を以下に記載してください。

[問3-1]：B ： SELECT s.store_name FROM STORE s,PRESENT p WHERE p.PRESENT_NO=1000 AND p.STORE_ID=s.STORE_ID;
[問3-2]：B ：SELECT s.store_name FROM STORE s WHERE <日付型カラム> = TO_DATE('12/10/25',’YY/MM/DD’);
[問3-3]：B ： SELECT DISTINCT store_name FROM STORE s,PRESENT p WHERE p.STORE_ID=s.STORE_ID;
			(STOREテーブルのSTORE_IDが重複している可能性を考慮）
[問3-4]：A ： SELECT s.store_name FROM STORE s,UNIT u WHERE s.SALES_UNIT_CD=u.UNIT_CD;
[問3-5]：A ： SELECT s.store_name,COUNT(*) AS cnt FROM STORE s,PRESENT p 
         	WHERE p.STORE_ID = s.STORE_ID AND s.STORE_ID LIKE  'H10%' GROUP BY s.STORE_NAME
         	(問題ではGROUP_BYはSTORE_IDになっていましたが、STORE_NAMEですよね）
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問4】正しい対策を以下に記載してください。（A～Gより選択)

[問4-1]：C
[問4-2]：D	
[問4-3]：E
[問4-4]：F
[問4-5]：G
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問5】正しい場合はT、誤っている場合はFを以下に記載してください。

[問5-1]：T
[問5-2]：T
[問5-3]：T
[問5-4]：F
[問5-5]：F
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問6】最も適切な選択肢（AorB,A～C）を以下に記載してください。
			
[問6-1]：B
[問6-2]：C
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問7】正しい場合はT、誤っている場合はFを以下に記載してください。

[問7-1]：F
[問7-2]：F
[問7-3]：T
[問7-4]：F
[問7-5]：F
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問8】A～Dのうち、誤っているものをすべて以下に記載してください。

誤っているもの：B,C
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問9】適切な記述を以下に記載してください。

解答：ProxyPass	/SAMPLE/image !
～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
【問10】必要なテストの観点を列挙してください。（行は自由に追加してください）

・単体テスト
	-プログラムが品質基準を満たしているか（コーディング規約、コードカバレッジ、Cyclomatic complexityなどホワイトボックス観点）
	-プログラム設計通りに動作するか（境界値、IOなどブラックボックス観点）

・結合テスト
	-単体画面の動作が機能要件を満たしているか
　	-複数画面を連携させてテストした時に機能要件を満たしているか
	-外部のシステムと接続させた時に機能要件を満たしているか
	
・システムテスト	
	-業務シナリオをすべて担保しているか（年間を通して、入稿、受注マッチング、反映などの業務がすべて正常に回るか、など）
	-運用シナリオをすべて担保しているか（障害通知、ログ、バックアップ、復旧、切り戻しなど）
	-提供対象内のすべての端末（ブラウザ）で正しく動作するか
	-セキュリティ要件を満たしているか、WEBサイトに脆弱性がないか（XSS、CSRFなど）
	-性能要件を満たしているか(通常時およびピーク時の画面ターンアラウンドタイム、ジョブネットがバッチウインドウにおさまるかなど）
	-高負荷な状況で長時間稼働を続けた時にメモリリークやスローダウンなどが発生しないか）
	-障害発生時に想定どおりにシステムが振る舞う（正しくフェールオーバするか、フェールバックするか、想定通りに縮退するかなど）

～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～
問題は以上です。お疲れ様でした。